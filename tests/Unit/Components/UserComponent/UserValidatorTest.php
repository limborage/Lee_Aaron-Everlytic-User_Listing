<?php

namespace Components\UserComponent;

use App\Components\UserComponent\UserValidator;
use Tests\TestCase;
use Illuminate\Validation\Validator;

class UserValidatorTest extends TestCase
{
    private const BAD_USER_DATA = [
        'name' => '',
        'surname' => '',
        'email' => '',
        'position' => ''
    ];

    private const GOOD_USER_DATA = [
        'name' => 'Test',
        'surname' => 'User',
        'email' => 'test@fake.com',
        'position' => 'Fake Position'
    ];

    /**
     * @var UserValidator
     */
    private $validator;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->validator = new UserValidator();
    }

    public function testBadUserData()
    {
        //Given that we have a user validator class
        // When we pass through incorrect user data
        $response = $this->validator->validateUser(self::BAD_USER_DATA, false);

        // Then we assert that an array with type "error" and validator with instance validator is returned
        $this->assertArrayHasKey('type', $response, 'Array has type index');
        $this->assertEquals('error', $response['type'], 'Array has error type');

        $this->assertArrayHasKey('validator', $response, 'Array has validator index');
        $this->assertInstanceOf(Validator::class, $response['validator'], 'Array has validator instance');
    }

    public function testGoodUserData()
    {
        //Given that we have a user validator class
        // When we pass through incorrect user data
        $response = $this->validator->validateUser(self::GOOD_USER_DATA, false);

        // Then we assert that an array with type "error" and validator with instance validator is returned
        $this->assertArrayHasKey('type', $response, 'Array has type index');
        $this->assertEquals('success', $response['type'], 'Array has success type');

        $this->assertArrayHasKey('validator', $response, 'Array has validator index');
        $this->assertInstanceOf(Validator::class, $response['validator'], 'Array has validator instance');
    }
}
